$(".serve-quiz").html("Serve Quiz")
$('#base-modal').html(' #{j(render(partial: 'new'))} ').modal()


function validateEmail(email){ 
var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
return re.test(email);
}
$.validator.addMethod("validate_comma_separated_emails",function(value,element){
emails = $("#email_ids").val().split(",")
check = 1
$.each(emails,function(index,value){
console.log(value)
if(!validateEmail(value)){
console.log("in if")
check = 0
}
})
if(check == 0){
return false
}
else{
return true
}
},"Enter correct email ids")

$("#choose_students").validate({
onkeyup: false,
onclick: false,
onfocusout: false,
rules: {
"quiz_bank_id": {
required: true
},
"email_ids":{
required: true,
validate_comma_separated_emails: true
},
"group_id":{
required: true
}
},
messages: {
"email_ids": {
required: "Either enter comma seprated email or select from group",
validate_comma_separated_emails: "Entered Emails are not valid"
},
"group_id": {
required: "Either enter comma seprated email or select from group"
}
},
highlight: function(element) {
$(element).siblings('label.error').remove();
$(element).closest('.control_validate').removeClass('success').addClass('error');
},
// Success function accepts lable as an argument
success: function(element) {
$(element).remove();
$(element).closest('.control_validate').removeClass('error').addClass('success');
}
});