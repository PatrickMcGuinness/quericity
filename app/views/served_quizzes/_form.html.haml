.modal-dialog
  .modal-content
    .modal-header
      %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button"} Ã—
      %h4
        ="Serve Quiz"
    = form_for @served_quiz,:class => "form-horizontal", :id => "choose_students", remote: true do |f|  
      .modal-body
        #wizard
          %h1 Select Quiz
          %div
            %legend Select Quiz
            .row
              .col-xs-12{style: "margin-bottom:10px;"}
                = f.select :quiz_bank_id, current_user.quiz_banks.map{|q| [q.title,q.id]},{prompt: "Select Quiz"},{class: 'form-control quiz-bank-dropdown'}      
       
          %h1 Add Students
          %div
            %legend Select Students
            .row 
              .col-xs-12.emails-div     
                =text_field_tag :email_ids, nil, class: "form-control emails", placeholder: "Enter comma separated emails then press enter"
              .col-xs-2.add-users.pull-right{style: "margin-top:10px;"}
                =link_to "Add more students", "#", class: "add-more-students btn btn-primary btn-warning" 
              .col-xs-12.hide.group-dropdown
                -if current_user.groups_to_show.blank?
                  = "No student group"
                -else
                  =select_tag 'group_id', options_for_select(current_user.groups_to_show.collect{ |u| [u.title, u.id] }), :class => "form-control student-group-id", prompt: "Select Group"
            .row{style: "margin-top:10px;"}
              .col-xs-6
                =link_to "OR Select from group", "#", class: "select-from-group"
                =link_to "OR Enter email ids", "#", class: "select-from-email hide"
            .row.students-email
              .student-cloud.col-xs-12{style: "margin-top:10px;"}
                .student-thumbnails{style:"margin-top:10px;"}  
                  -current_user.students.each do |student|
                    .col-xs-2{style: "margin-left:5px;"}
                      .thumbnail.row{style:"width:220px"}
                        .col-xs-1.thumbnail_checkbox
                          =check_box_tag "student_ids[]" ,student.id,false,:class => "delete"
                        .col-xs-1.thumbnail_image
                          =image_tag display_picture(student),:class => 'thumnail_picture pull-left'
                        .col-xs-8.offset-1{style:"font-size:10px;"}
                          =show_name(student)
                          =student.email          
          %h1 Choose Options
          %div
            %legend Choose Options
            .row
              .col-xs-4
                =f.text_field :date,:placeholder => "Start date",class: "form-control datepicker"
              .col-xs-4
                =f.text_field :start_time,:placeholder => "Start time",class: 'form-control time-picker'
              .col-xs-4
                =f.text_field :close_date, placeholder: "Close Date", class: "form-control datepicker"
              .col-xs-12.mar-top-20
                = f.text_area :instructions,rows:10,:placeholder => "Add instructions", class: "form-control serve-instruction"
              .col-xs-12.mar-top-20.infinite  
                =f.check_box :infinite_duration, {checked:true, value:true}
                = "Set the duration for quiz to unlimited"
              .col-xs-2.duration-text.mar-top-20.hide
                ="Enter duration"
              .col-xs-4.duration-field.mar-top-20.hide
                =f.text_field :duration, class: "form-control"
              .col-xs-4.duration-option.mar-top-20.hide
                =select_tag :duration_option,options_for_select(["minutes","hours"]), class: "form-control"
              .col-xs-2.duration-cancel.hide{style: "margin-top:23px;"}
                =link_to "#",class: "hide-duration pull-right" do
                  %span.glyphicon.glyphicon-remove    
              .col-xs-12.mar-top-20
                =f.check_box :random
                ="Randomize quiz questions/order: "    
              .col-xs-6.mar-top-20
                ="Show the answers to students: "
              .col-xs-6.mar-top-20  
                =f.select :answer,ServedQuiz.answer_options_for_select,{}, {class: "form-control"}  
                      
                       

:javascript
  $(document).ready(function(){
    $("#wizard").steps({
      onStepChanging: function (event, currentIndex, newIndex){
        check = 0; 
        if(currentIndex == 0){
          if ($("#served_quiz_quiz_bank_id").val() == ""){
            $("#served_quiz_quiz_bank_id").siblings("label.error").remove()
            $("#served_quiz_quiz_bank_id").after("<label class = 'error'>Select a quiz<label>")
            check = 1;
          }
          else{
            $("#served_quiz_quiz_bank_id").siblings("label.error").remove()
            $.ajax({
              url: "/served_quizzes/"+$(".quiz-bank-dropdown").val()+"/get_instructions",
              method: "GET",
              success: function(data){
                $(".serve-instruction").text(data.instructions)
              }
            })
            check = 0
          }
        }
        if(currentIndex == 1){
          if($(".student-group-id").val() == ""){
            if($(".delete").is(":checked")){
              check = 0
              $(".student-cloud").siblings("label.error").remove()
            }
            else{
              check = 1
              $(".student-cloud").siblings("label.error").remove()
              $(".student-cloud").before("<label class = 'error'>Select at least one student or group<label>")
            }
          }
          else{
            check = 0;
          }
        }
        if(check == 0){
          return true;
        }
        if(check == 1){
          return false
        } 
      },
      onFinishing: function (event, currentIndex){ 
        $("form#new_served_quiz").submit() 
      },
      labels: { finish: "Serve Quiz"}
    });
    $(".date-picker").datepicker();
    $(".modal-body").on("click", ".add-more-students", function(e){
      e.preventDefault()
      console.log("hello")
      $.ajax({
        url: "/served_quizzes/add_more_students",
        method: "GET",
        data: {emails:$(".emails").val(), quiz_bank_id: $("#quiz-bank-id").val()},
        success: function(data){
          $(".student-thumbnails").append($(data).find('.student-thumbnails').html())
          $(".emails").val("")
        }
      })
    })
    $(".modal-body").on("click", ".select-from-group", function(e){
      e.preventDefault()
      $(".group-dropdown").removeClass("hide")
      $(".emails-div").addClass("hide")
      $(".student-thumbnails").html("")
      $(this).addClass("hide")
      $(".add-users").addClass("hide")
      $(".select-from-email").removeClass("hide")
    })
    $(".modal-body").on("click", ".select-from-email", function(e){
      e.preventDefault()
      $(".group-dropdown").addClass("hide")
      $(".emails-div").removeClass("hide")
      $(".student-thumbnails").html("")
      $(this).addClass("hide")
      $(".select-from-group").removeClass("hide")
      $(".add-users").removeClass("hide")
      $.ajax({
        url: "/served_quizzes/get_all_students",
        method: "GET",
        success: function(data){
          $(".student-thumbnails").html($(data).find('.student-thumbnails').html())
        }
      })
    })

    $(".modal-body").on("click", ".add-user-group", function(e){
      e.preventDefault()
      console.log("hello")
      $.ajax({
        url: "/served_quizzes/add_more_students",
        method: "GET",
        data: {emails:$(".emails-for-group").val(), quiz_bank_id: $("#quiz-bank-id").val()},
        success: function(data){
          console.log(data)
          $(".student-thumbnails").append($(data).find('.student-thumbnails').html())
          $(".emails-for-group").val("")
        }
      })
    })

    $(".modal-body").on("click","#served_quiz_infinite_duration", function(e){
      if($(this).is(":checked")){
        $(".duration-text, .duration-option, .duration-field, .duration-cancel").addClass("hide")
        $(".infinite").removeClass("hide")

      }
      else{
        $(".duration-text, .duration-option, .duration-field, .duration-cancel").removeClass("hide")
        $(".infinite").addClass("hide")
      }
      
    })

    $(".modal-body").on("click",".hide-duration", function(e){
      e.preventDefault()
      $(".duration-text, .duration-option, .duration-field, .duration-cancel").addClass("hide")
      $(".infinite").removeClass("hide")
    })


  })
      
